# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-18 04:31
from __future__ import unicode_literals
from django.db import migrations
from django.conf import settings
import os


def populate_state(apps, schema_editor):
    from django.contrib.gis.utils import LayerMapping
    
    State = apps.get_model('geography', 'State')
    state_mapping = LayerMapping(State, os.path.join(settings.BASE_DIR, 'geography/geodata/states/cb_2015_us_state_500k/cb_2015_us_state_500k.shp'), {'title': 'NAME', 'fips': 'STATEFP', 'geom': 'MULTIPOLYGON'})
    state_mapping.save(verbose=True)

    CongressionalDistrict = apps.get_model('geography', 'CongressionalDistrict')
    congressional_district_mapping = LayerMapping(CongressionalDistrict, os.path.join(settings.BASE_DIR, 'geography/geodata/congressional_districts/tl_2016_us_cd115/tl_2016_us_cd115.shp'), {'title': 'CD115FP', 'state': {'fips': 'STATEFP'}, 'geom': 'MULTIPOLYGON'})
    congressional_district_mapping.save(verbose=True)

    County = apps.get_model('geography', 'County')
    county_mapping = LayerMapping(County, os.path.join(settings.BASE_DIR, 'geography/geodata/counties/cb_2015_us_county_500k/cb_2015_us_county_500k.shp'), {'title': 'NAME', 'fips': 'COUNTYFP', 'state': {'fips': 'STATEFP'}, 'geom': 'MULTIPOLYGON'})
    county_mapping.save(verbose=True)

    LegislativeDistrict = apps.get_model('geography', 'LegislativeDistrict')
    legislative_district_mapping = LayerMapping(LegislativeDistrict, os.path.join(settings.BASE_DIR, 'geography/geodata/legislative_districts/cb_2015_53_sldu_500k/cb_2015_53_sldu_500k.shp'), {'title': 'NAME', 'state': {'fips': 'STATEFP'}, 'geom': 'MULTIPOLYGON'})
    legislative_district_mapping.save(verbose=True)


def remove_state(apps, schema_editor):
    State = apps.get_model('geography', 'State')
    State.objects.all().delete()

    CongressionalDistrict = apps.get_model('geography', 'CongressionalDistrict')
    CongressionalDistrict.objects.all().delete()

    County = apps.get_model('geography', 'County')
    County.objects.all().delete()

    LegislativeDistrict = apps.get_model('geography', 'LegislativeDistrict')
    LegislativeDistrict.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('geography', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_state, reverse_code=remove_state)
    ]
